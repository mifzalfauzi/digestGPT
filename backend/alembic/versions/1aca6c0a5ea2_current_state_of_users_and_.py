"""Current state of Users and UserSubscription

Revision ID: 1aca6c0a5ea2
Revises: 6591d50e567a
Create Date: 2025-08-14 20:11:11.144486

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1aca6c0a5ea2'
down_revision: Union[str, Sequence[str], None] = '6591d50e567a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_stripe_customer_id'), table_name='users')
    op.drop_index(op.f('ix_users_stripe_subscription_id'), table_name='users')
    op.drop_column('users', 'last_payment_check')
    op.drop_column('users', 'stripe_customer_id')
    op.drop_column('users', 'stripe_subscription_id')
    op.drop_column('users', 'subscription_status')
    op.drop_column('users', 'subscription_end_date')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('subscription_end_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('subscription_status', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('stripe_subscription_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('stripe_customer_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('last_payment_check', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.create_index(op.f('ix_users_stripe_subscription_id'), 'users', ['stripe_subscription_id'], unique=False)
    op.create_index(op.f('ix_users_stripe_customer_id'), 'users', ['stripe_customer_id'], unique=False)
    # ### end Alembic commands ###
