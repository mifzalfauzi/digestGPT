"""fix issues table

Revision ID: 130040ffa603
Revises: 8b2ab6094012
Create Date: 2025-09-03 20:14:43.615380

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '130040ffa603'
down_revision: Union[str, Sequence[str], None] = '8b2ab6094012'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('issues', sa.Column('document_id', sa.UUID(), nullable=True))
    op.add_column('issues', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('issues', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.alter_column('issues', 'issue_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.create_foreign_key(None, 'issues', 'documents', ['document_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'issues', type_='foreignkey')
    op.alter_column('issues', 'issue_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.drop_column('issues', 'updated_at')
    op.drop_column('issues', 'created_at')
    op.drop_column('issues', 'document_id')
    # ### end Alembic commands ###
